<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.biobank</groupId>
  <artifactId>platedecoder</artifactId>
  <version>0.0.1-maven-SNAPSHOT</version>

  <repositories>
    <repository>
      <id>cbsrbiobank-maven-repo</id>
      <name>CBSR Maven Repository</name>
      <url>https://github.com/cbsrbiobank/biobank-maven-repo/raw/master/</url>
    </repository>
  </repositories>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <profiles>
    <profile>
      <id>platform-linux</id>
      <activation>
        <os>
          <family>unix</family>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <jrePath>/usr/lib/jvm/java-8-oracle/jre</jrePath>
      </properties>
    </profile>
    <profile>
      <id>platform-windows</id>
      <activation>
        <os>
          <family>windows</family>
          <arch>x86</arch>
        </os>
      </activation>
      <properties>
        <jrePath>C:/Java/jre</jrePath>
      </properties>
    </profile>
  </profiles>

  <build>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <argLine>-Djava.library.path=target/lib:${java.library.path}</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <compilerArguments>
            <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/ext/lib/jfxrt.jar</bootclasspath>
          </compilerArguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>

              <artifactItems>
                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>libdmscanlib64</artifactId>
                  <version>3.0.0-ubuntu20.04</version>
                  <type>so</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>dmscanlib</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>OpenThreadsWin32</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>libglog</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>opencv_core248</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>opencv_highgui248</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>scanlib</groupId>
                  <artifactId>opencv_imgproc248</artifactId>
                  <version>3.0.0-win32</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>

              </artifactItems>

              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-classpath</argument>
            <classpath/>
            <argument>-Djava.library.path=${project.build.directory}/lib/:${java.library.path}</argument>
            <argument>org.biobank.platedecoder.ui.PlateDecoder</argument>
            <argument>--skip-sane-init</argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.github.fvarrui</groupId>
        <artifactId>javapackager</artifactId>
        <version>1.0.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>package</goal>
            </goals>
            <configuration>
              <mainClass>org.biobank.platedecoder.ui.PlateDecoder</mainClass>
              <vmArgs>-Djava.library.path=lib</vmArgs>
              <bundleJre>true</bundleJre>
              <generateInstaller>false</generateInstaller>
              <administratorRequired>false</administratorRequired>
              <platform>auto</platform>
              <additionalResources>
                <additionalResource>${project.build.directory}/lib</additionalResource>
              </additionalResources>
              <linuxConfig>
              </linuxConfig>
              <!--
                  <macConfig>...</macConfig>
                  <winConfig>...</winConfig>
                  [...]
              -->
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <dependencies>
    <!--
        <dependency>
        <groupId>scanlib</groupId>
        <artifactId>libdmscanlib64</artifactId>
        <version>3.0.0-ubuntu20.04</version>
        <type>so</type>
        <scope>compile</scope>
        </dependency>
        <dependency>
        <groupId>scanlib</groupId>
        <artifactId>libdmscanlib64</artifactId>
        <version>3.0.0-ubuntu20.04</version>
        <scope>system</scope>
        <systemPath>${basedir}/lib/libdmscanlib64.so</systemPath>
        </dependency>
    -->
    <dependency>
      <groupId>javafx</groupId>
      <artifactId>jfxrt</artifactId>
      <version>${java.version}</version>
      <scope>system</scope>
      <systemPath>${java.home}/lib/ext/jfxrt.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.controlsfx</groupId>
      <artifactId>controlsfx</artifactId>
      <version>8.40.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.supercsv</groupId>
      <artifactId>super-csv</artifactId>
      <version>2.4.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.10</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.14</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
      <version>1.1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
      <version>1.9.40</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jr</groupId>
      <artifactId>jackson-jr-all</artifactId>
      <version>2.11.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.0.4</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.saxsys</groupId>
      <artifactId>jfx-testrunner</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
